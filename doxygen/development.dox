/*! @page page_big_development BIG development environment
@author Jean Louis-Guerin
<hr>

@section dev_toc Table of Content
<div class="TOC">
	- @ref dev_intro
	- @ref dev_distribution
	- @ref dev_using_big
.
</div>

@section dev_intro Introduction
Originally the library was released to end-users to develop GUI applications.
The following sections describes the content of BIG library release and the
tools required to build an application.\n
As the sources are now public domain I also have a section on building the library.

@ref big_toc "[return to BIG toc]" @ref dev_toc "[return to development toc]"

@section dev_distribution BIG release content
The BIG library distribution contains the following files:
- BIG2.H 		The header file that describe the BIG library API\n
- BIG2.LIB 		BIG2 Pure C Library without debug information \n
- BIG2DEBG.LIB 	BIG2 Pure C Library with debug information\n
- BIG2DEMO.C 	The source of the demo program
- BIG2DEMO.RSC 	the resource file used by the demo program
- BIG2DEMO.H 	the resource header file for the demo
- BIG2DEMO.HRD 	the objects names file for the resource
- BIG2DEMO.PRG 	the demo program executable
- BIG2DEMO.PRJ 	the Pure C project file to create the demo
- BIG2DEMO.RH 	the heading of the resource
- BIG2DEMO.RSH 	the resource with the format source C
- BIG2DEMO.PI3 	a Degas image that can be loaded in the demo
- BIG2DEMO.IMG	an image used as background of the demo desk
- HTML.ZIP	An Archive of the BIG documentation in HTML format. To read the 
  documentation you need to decompress archive and to access the index.html file.
- BIG2.CHM		The BIG Documentation in compressed HTML format.
- BIG_IMGS.LIB the Library for images loading \n
- BIG_IMGS.H 	the header file for images loading\n
- BIG_IMGS.TXT Documentation of the images loading Library\n
.
@ref big_toc "[return to BIG toc]" @ref dev_toc "[return to development toc]"

@section dev_using_big Using BIG library
In order to use the BIG library you first need a C complier/Linker. As BIG
is released as a PURE C library you need to use a compiler/linker that can 
use this format. This is obviously the case of the Pure C compiler. But the 
recommended compiler is the AHCC compiler from Henk Robbers that is binary
compatible with files generated by Pure C. The advantage is that this
compiler is maintained and fixes some problems of the Pure C compiler.
This compiler can be found at http://members.chello.nl/h.robbers/

To develop GUI application you also need a resources editors. It is necessary to use 
one which allow editing of the extended objects ob_types, ob_flags and ob_state. 
INTERFACE V2.x is recommended but ORCS is acceptable. Unfortunately, OCRS uses
specific way of saving RSC files, in particular with regard to the editable fields. 
The routines of BIG can handle this but it is however preferable to use an editor
that produces standards RSC files like \b Interface.

For a complete description of the recommended Atari Software development 
environment please refer to Atari Software development page at 
http://info-coach.fr/atari/software/development.php

@ref big_toc "[return to BIG toc]" @ref dev_toc "[return to development toc]"

@section dev_create_big Creating a BIG release
The BIG library sources are now released into the public domain. You can thus 
freely modify and distribute it, provided that the complete package is proposed.\n
The BIG sources release contains all the files from the end-user release but it also
contains the .c and .h files necessary to create the BIG library files. It also
contains several files necessary to create the final HTML documentation.

The sources have been validated using AHCC compiler so this is the compiler of
choice. The sources should also compiled with the Lattice 5.60 compiler.

In order to generate the documentation you need to install the Doxygen
program found at http://www.stack.nl/~dimitri/doxygen/.

@todo describe procedure to build BIG lib

@ref big_toc "[return to BIG toc]" @ref dev_toc "[return to development toc]"
<hr>
@date October 2014

*/
